The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This is a 0-add_integer text file in reStructuredText format. First import
``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(1, 2)
    3

    >>> add_integer(2, -1)
    1

    >>> add_integer(1)
    99

    >>> add_integer(-90)
    8

    >>> add_integer(1.5, 1)
    2

    >>> add_integer("num", 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, "num")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
